<!--
CLAW default configuration. This file should not be edited!
For more information about the configuration file and its extension, please
refer to the developer's guide
-->
<claw version="2.0">
  <!-- Global transformation parameters -->
  <global type="root">
    <!-- Define the translator to be used. -->
    <parameter key="translator" value="claw.wani.x2t.translator.ClawTranslator" />

    <!-- Default general values -->
    <parameter key="default_target" value="gpu" />
    <parameter key="default_directive" value="openacc" />

    <!-- OpenACC default information -->
    <!--
      Define the default values to be used for the clauses.
      If value set to 0, compiler default value used.
      - acc_vector_length -> vector_length(128)
      - acc_num_gangs -> num_gangs(8)
      - acc_num_workers -> num_workers(8)
    -->
    <parameter key="acc_vector_length" value="128" />
    <parameter key="acc_num_gangs" value="8" />
    <parameter key="acc_num_workers" value="8" />
    <!--
      Specify the order of generation of clauses when nested loops are generated
      possible values are: gang_vector, vector, gang, none
    -->
    <parameter key="acc_execution_mode" value="gang_vector" />

    <!-- OpenMP default information -->
    <!--
      Define the default values to be used for the clauses.
      If value set to 0, compiler default value used.
      - omp_num_teams -> num_teams(65536)
      - omp_num_threads -> num_threads(256)
      - omp_scheduler_chunk_size -> scheduler_chunk_size(256)
    -->
    <parameter key="omp_num_teams" value="0" />
    <parameter key="omp_num_threads" value="0" />
    <parameter key="omp_scheduler_chunk_size" value="0" />
    <!--
      Specify the order of generation of clauses when nested loops are generated
      possible values are teams_distribute, teams_distribute_simd, teams_distribute_parallel_do, teams_distribute_parallel_do_simd, none
    -->
    <parameter key="omp_execution_mode" value="teams_distribute" />


    <!-- Accelerator (OpenACC and OpenMP) default information -->
    <!--
      Data strategy influence how CLAW generates data region with SCA
      directive.
      - present: in/out arrays are present on GPU in SCA subroutine.
      - kernel: data region is generated by SCA kernel (subroutine).
                arrays are created in the kernel and data are move to/from
                device at the beginning/end of the subroutine.
      - none: no data region generated.
    -->
    <parameter key="accelerator_data_strategy" value="present" />
    <!--
      Local array strategy influence how CLAW handle the local arrays in
      SCA subroutine.
      - private: Privatize local arrays if needed.
      - promote: Promote the array instead of making them private if needed.
    -->
    <parameter key="accelerator_local_strategy" value="private" />

    <!--
      Collapse DO statement when possible (!$claw nodep)
      - false: collapse clause is disable.
      - true: collapse clause is used when possible.
    -->
    <parameter key="accelerator_collapse" value="false" />

    <!-- CPU transformation defaults -->
    <!--
      Which transformation should be used by default when transforming for CPU.
      - fusion: adjacent statements are grouped together and wrapped in a DO
                statement.
      - single: each assign statement is wrapped in a DO statement.
    -->
    <parameter key="cpu_trans_strategy" value="fusion" />

    <!-- SCA defaults -->
    <!--
      How promotion is handle in SCA element function/subroutine. If true,
      newly added dimension are inserted as assumed shape and no new
      parameter is inserted in the function/subroutine signature. If false,
      the promotion is performed like in normal function/subroutine.
    -->
    <parameter key="sca_elemental_promotion_assumed" value="true" />

    <!-- Enable generation of Serialbox2 library calls in SCA -->
    <parameter key="sca_serialization_enabled" value="true" />
  </global>

  <!-- Transformation sets -->
  <sets>
    <set name="claw-internal-set" />
    <set name="claw-low-level-set" />
    <set name="claw-high-level-set" />
  </sets>

  <!-- Transformation groups and order -->
  <groups>
    <!-- Low-level transformations -->
    <group name="remove" />
    <group name="directive-primitive" />
    <group name="expand" />
    <group name="loop-extract" />
    <group name="loop-hoist" />
    <group name="loop-fusion" />
    <group name="loop-interchange" />
    <group name="on-the-fly" />
    <group name="kcache" />
    <group name="if-extract" />
    <!-- High-level transformations -->
    <group name="sca-model-data" />
    <group name="sca" />
    <group name="sca-forward" />
    <!-- internal applied at the end -->
    <group name="openacc-continuation" />
  </groups>
</claw>
