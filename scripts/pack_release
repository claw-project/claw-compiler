#!/bin/bash
#
# This file is released under terms of BSD license
# See LICENSE file for more information
#
# Helper script to pack a release with all the git submodule fetched and the
# Java dependencies resolved.
#
# author: clementval
#

#######################################
# Show the available options
# Arguments:
#   None
# Returns:
#   None
#######################################
function show_help(){
  echo "$0 -v <version_number> [-o <output_dir>] [-b <branch-name>]"
  echo ""
  echo "Options:"
  echo " -v <version_number> Version number given to the release"
  echo " -o <output_dir>     Specify where to place the release archive (default: current directory)"
  echo " -b <branch-name>    Specifiy a branch to use for the release (default: master)"
}

# Define local variable
claw_branch="master"
claw_main_repo="git@github.com:claw-project/claw-compiler.git"
claw_release_dir=""
claw_ant_root="cx2t/src"
claw_version=""

while getopts "hb:o:v:" opt; do
  case "$opt" in
  h)
    show_help
    exit 0
    ;;
  o)
    claw_release_dir=$OPTARG
    ;;
  b)
    claw_branch=$OPTARG
    ;;
  v)
    claw_version=$OPTARG
  esac
done

if [[ ! ${claw_version} ]]
then
  echo "Error: version is mandatory"
  show_help
  exit 1
fi

claw_version_name="claw-compiler-${claw_version}"

echo ""
echo "================================================="
echo "CLAW Compiler release archive information"
echo "================================================="
echo "- Repo: ${claw_main_repo}"
echo "- Branch: ${claw_branch}"
echo "- Dest dir: ${claw_release_dir}"
echo "- Version: ${claw_version}"
echo ""

rm -rf "${claw_version_name}" # Make sure destination doesn't exists
git clone --depth 1 -b "${claw_branch}" ${claw_main_repo} "${claw_version_name}"
cd "${claw_version_name}" || exit 1
git submodule init
git submodule update --remote
# TODO update version number in CMakeLists.txt
cd ${claw_ant_root} || exit 1
ant -Dantfile.dir="$(pwd)" common.bootstrap
ant -Dantfile.dir="$(pwd)" common.resolve
cd ../../.. || exit 1
rm -f "${claw_version_name}".tar*
tar cvf "${claw_version_name}".tar "${claw_version_name}"/*
gzip "${claw_version_name}".tar
[[ ${claw_release_dir} ]] && mv "${claw_version_name}".tar.gz "${claw_release_dir}"
rm -rf "${claw_version_name}"
